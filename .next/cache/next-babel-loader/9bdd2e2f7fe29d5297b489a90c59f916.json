{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roy\\\\Desktop\\\\projects\\\\discorderly\\\\Server\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nconst LoginPage = () => {\n  const {\n    0: login,\n    1: setlogin\n  } = useState({\n    username: '',\n    password: '',\n    submitted: false,\n    loading: false,\n    error: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setlogin(_objectSpread({}, login, {\n      [name]: value,\n      \"error\": \"\"\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setlogin(_objectSpread({}, login, {\n      submitted: true\n    }));\n    const {\n      username,\n      password\n    } = login; // stop here if form is invalid\n\n    if (!(username && password)) {\n      return;\n    }\n\n    setlogin(_objectSpread({}, login, {\n      loading: true\n    }));\n    authenticate(username, password).then(data => {\n      data && console.log(data);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\",\n    alt: \"logo\",\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    name: \"form\",\n    onSubmit: e => handleSubmit(e),\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"\",\n    name: \"username\",\n    value: login.username,\n    onChange: handleChange,\n    placeholder: \"USERNAME\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), login.submitted && !login.username && __jsx(\"div\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Username is required\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"\",\n    name: \"password\",\n    value: login.password,\n    onChange: handleChange,\n    placeholder: \"PASSWORD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), login.submitted && !login.password && __jsx(\"div\", {\n    className: \"help-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Password is required\")), __jsx(\"span\", {\n    className: \"form__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, login.error), __jsx(\"div\", {\n    className: 'cart__button-container blue',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nexport default LoginPage;\n\nconst authenticate = (username, password) => {};","map":{"version":3,"sources":["C:/Users/Roy/Desktop/projects/discorderly/Server/pages/index.tsx"],"names":["React","useState","LoginPage","login","setlogin","username","password","submitted","loading","error","handleChange","e","name","value","target","handleSubmit","preventDefault","authenticate","then","data","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { NextPage } from 'next'\r\n\r\nconst LoginPage = () => {\r\n    const [login, setlogin] = useState({   username: '',\r\n                                            password: '',\r\n                                            submitted: false,\r\n                                            loading: false,\r\n                                            error: ''\r\n                                        }); \r\n       \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setlogin({...login, [name]: value, \"error\": \"\" });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setlogin({...login, submitted: true });\r\n        const { username, password } = login;\r\n        // stop here if form is invalid\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        setlogin({...login, loading: true });\r\n        authenticate(username, password)\r\n        .then(data => {data && console.log(data)})\r\n    }\r\n\r\n        return(\r\n             <div className=\"\" >\r\n                    <img src=\"\" alt=\"logo\" className=\"\" />\r\n                    <div className=\"\">\r\n                        <form name=\"form\" onSubmit={(e) => handleSubmit(e)} className=\"\"> \r\n                            <div className=\"\">\r\n                                <input type=\"text\" className=\"\" name=\"username\" value={login.username} onChange={handleChange} placeholder=\"USERNAME\"/>\r\n                                {login.submitted && !login.username &&\r\n                                    <div className=\"help-block\">Username is required</div>\r\n                                }\r\n                                <input type=\"password\" className=\"\" name=\"password\" value={login.password} onChange={handleChange} placeholder=\"PASSWORD\"/>\r\n                                {login.submitted && !login.password &&\r\n                                    <div className=\"help-block\">Password is required</div>\r\n                                }\r\n                            </div>\r\n\r\n                            <span className=\"form__error\">{login.error}</span>\r\n\r\n                            <div className={'cart__button-container blue'} >\r\n                               \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n\r\nconst authenticate = (username, password) =>{}"]},"metadata":{},"sourceType":"module"}