{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roy\\\\Desktop\\\\projects\\\\discorderly\\\\Server\\\\pages\\\\Login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { authenticate } from '../../Frontend/src/Services/Users';\n\nconst LoginPage = () => {\n  const {\n    0: login,\n    1: setlogin\n  } = useState({\n    username: '',\n    password: '',\n    submitted: false,\n    loading: false,\n    error: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setlogin(_objectSpread({}, login, {\n      [name]: value,\n      \"error\": \"\"\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setlogin(_objectSpread({}, login, {\n      submitted: true\n    }));\n    const {\n      username,\n      password\n    } = login; // stop here if form is invalid\n\n    if (!(username && password)) {\n      return;\n    }\n\n    setlogin(_objectSpread({}, login, {\n      loading: true\n    }));\n    authenticate(username, password).then(data => {\n      data && console.log(data);\n    });\n  };\n\n  return;\n\n  __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"halloooo\");\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/Roy/Desktop/projects/discorderly/Server/pages/Login.tsx"],"names":["React","useState","authenticate","LoginPage","login","setlogin","username","password","submitted","loading","error","handleChange","e","name","value","target","handleSubmit","preventDefault","then","data","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,MAAMC,SAA0B,GAAG,MAAM;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC;AAAIK,IAAAA,QAAQ,EAAE,EAAd;AACKC,IAAAA,QAAQ,EAAE,EADf;AAEKC,IAAAA,SAAS,EAAE,KAFhB;AAGKC,IAAAA,OAAO,EAAE,KAHd;AAIKC,IAAAA,KAAK,EAAE;AAJZ,GAAD,CAAlC;;AAQA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAV,IAAAA,QAAQ,mBAAKD,KAAL;AAAY,OAACS,IAAD,GAAQC,KAApB;AAA2B,eAAS;AAApC,OAAR;AACH,GAHD;;AAKA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,QAAQ,mBAAKD,KAAL;AAAYI,MAAAA,SAAS,EAAE;AAAvB,OAAR;AACA,UAAM;AAAEF,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBH,KAA/B,CAHwB,CAIxB;;AACA,QAAI,EAAEE,QAAQ,IAAIC,QAAd,CAAJ,EAA6B;AACzB;AACH;;AACDF,IAAAA,QAAQ,mBAAKD,KAAL;AAAYK,MAAAA,OAAO,EAAE;AAArB,OAAR;AACAP,IAAAA,YAAY,CAACI,QAAD,EAAWC,QAAX,CAAZ,CACCW,IADD,CACMC,IAAI,IAAI;AAACA,MAAAA,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAR;AAA0B,KADzC;AAEH,GAXD;;AAaI;;AACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,CA9BD;;AAgCA,eAAehB,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { NextPage } from 'next'\r\nimport { authenticate } from '../../Frontend/src/Services/Users';\r\n\r\nconst LoginPage: NextPage<Props> = () => {\r\n    const [login, setlogin] = useState({   username: '',\r\n                                            password: '',\r\n                                            submitted: false,\r\n                                            loading: false,\r\n                                            error: ''\r\n                                        }); \r\n       \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setlogin({...login, [name]: value, \"error\": \"\" });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setlogin({...login, submitted: true });\r\n        const { username, password } = login;\r\n        // stop here if form is invalid\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        setlogin({...login, loading: true });\r\n        authenticate(username, password)\r\n        .then(data => {data && console.log(data)})\r\n    }\r\n\r\n        return\r\n             <h1>halloooo</h1>\r\n            \r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}