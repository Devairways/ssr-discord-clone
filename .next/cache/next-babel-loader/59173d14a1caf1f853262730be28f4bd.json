{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { registerUser } from \"./Services/Users\";\nimport \"./styles/imports.scss\";\n\nconst LoginPage = () => {\n  const {\n    0: register,\n    1: setRegister\n  } = useState({\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n    submitted: false,\n    loading: false,\n    error: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRegister(_objectSpread({}, register, {\n      [name]: value,\n      \"error\": \"\"\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setRegister(_objectSpread({}, register, {\n      submitted: true\n    }));\n    const {\n      username,\n      password\n    } = register; // stop here if form is invalid\n\n    if (!(username && password)) {\n      return;\n    }\n\n    setRegister(_objectSpread({}, register, {\n      loading: true\n    }));\n    registerUser(username, password); // .then(data => {data && console.log(data)})\n  };\n\n  return __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(\"img\", {\n    src: \"\",\n    alt: \"logo\",\n    className: \"\"\n  }), __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(\"form\", {\n    name: \"form\",\n    onSubmit: e => handleSubmit(e),\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"\",\n    name: \"username\",\n    value: register.username,\n    onChange: handleChange,\n    placeholder: \"USERNAME\"\n  }), register.submitted && !register.username && __jsx(\"div\", {\n    className: \"help-block\"\n  }, \"Username is required\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"\",\n    name: \"password\",\n    value: register.email,\n    onChange: handleChange,\n    placeholder: \"EMAIL\"\n  }), register.submitted && !register.email && __jsx(\"div\", {\n    className: \"help-block\"\n  }, \"Email is required\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"\",\n    name: \"password\",\n    value: register.password,\n    onChange: handleChange,\n    placeholder: \"PASSWORD\"\n  }), register.submitted && !register.password && __jsx(\"div\", {\n    className: \"help-block\"\n  }, \"Password is required\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"\",\n    name: \"password2\",\n    value: register.password2,\n    onChange: handleChange,\n    placeholder: \"RETYPE PASSWORD\"\n  }), register.submitted && !register.password2 && __jsx(\"div\", {\n    className: \"help-block\"\n  }, \"Please retype password\")), __jsx(\"span\", {\n    className: \"form__error\"\n  }, register.error), __jsx(\"div\", {\n    className: \"\"\n  }, __jsx(Link, {\n    href: \"/dashboard\"\n  }, __jsx(\"a\", null, \"Go\")), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"h1\", null, \"Back\"))))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/Roy/Desktop/projects/discorderly/Server/pages/Register.tsx"],"names":["React","useState","Link","registerUser","LoginPage","register","setRegister","username","email","password","password2","submitted","loading","error","handleChange","e","name","value","target","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nimport {registerUser} from \"./Services/Users\";\r\n\r\nimport \"./styles/imports.scss\";\r\n\r\n\r\nconst LoginPage = () => {\r\n    const [register, setRegister] = useState({   \r\n                                            username: '',\r\n                                            email: '',\r\n                                            password: '',\r\n                                            password2: '',\r\n                                            submitted: false,\r\n                                            loading: false,\r\n                                            error: ''\r\n                                        }); \r\n       \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRegister({...register, [name]: value, \"error\": \"\" });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setRegister({...register, submitted: true });\r\n        const { username, password } = register;\r\n        // stop here if form is invalid\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        setRegister({...register, loading: true });\r\n        registerUser(username, password)\r\n        // .then(data => {data && console.log(data)})\r\n    }\r\n\r\n        return(\r\n             <div className=\"\" >\r\n                <img src=\"\" alt=\"logo\" className=\"\" />\r\n                <div className=\"\">\r\n                    <form name=\"form\" onSubmit={(e) => handleSubmit(e)} className=\"\"> \r\n                        <div className=\"\">\r\n                            <input type=\"text\" className=\"\" name=\"username\" value={register.username} onChange={handleChange} placeholder=\"USERNAME\"/>\r\n                            {register.submitted && !register.username &&\r\n                                <div className=\"help-block\">Username is required</div>\r\n                            }\r\n                            <input type=\"email\" className=\"\" name=\"password\" value={register.email} onChange={handleChange} placeholder=\"EMAIL\"/>\r\n                            {register.submitted && !register.email &&\r\n                                <div className=\"help-block\">Email is required</div>\r\n                            }\r\n                            <input type=\"password\" className=\"\" name=\"password\" value={register.password} onChange={handleChange} placeholder=\"PASSWORD\"/>\r\n                            {register.submitted && !register.password &&\r\n                                <div className=\"help-block\">Password is required</div>\r\n                            }\r\n                            <input type=\"password\" className=\"\" name=\"password2\" value={register.password2} onChange={handleChange} placeholder=\"RETYPE PASSWORD\"/>\r\n                            {register.submitted && !register.password2 &&\r\n                                <div className=\"help-block\">Please retype password</div>\r\n                            }\r\n                        </div>\r\n                        <span className=\"form__error\">{register.error}</span>\r\n                        <div className=\"\" >\r\n                            <Link href=\"/dashboard\">\r\n                                <a>Go</a>\r\n                            </Link>\r\n                            <Link href=\"/\">\r\n                                <h1>Back</h1>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}