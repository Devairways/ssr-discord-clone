{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Roy\\\\Desktop\\\\projects\\\\discorderly\\\\Server\\\\pages\\\\Login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { authenticate } from '../../Frontend/src/Services/Users';\n\nvar LoginPage = function LoginPage() {\n  var _useState = useState({\n    username: '',\n    password: '',\n    submitted: false,\n    loading: false,\n    error: ''\n  }),\n      login = _useState[0],\n      setlogin = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    var _objectSpread2;\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setlogin(_objectSpread({}, login, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, value), _defineProperty(_objectSpread2, \"error\", \"\"), _objectSpread2)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setlogin(_objectSpread({}, login, {\n      submitted: true\n    }));\n    var username = login.username,\n        password = login.password; // stop here if form is invalid\n\n    if (!(username && password)) {\n      return;\n    }\n\n    setlogin(_objectSpread({}, login, {\n      loading: true\n    }));\n    authenticate(username, password).then(function (data) {\n      data && console.log(data);\n    });\n  };\n\n  return;\n\n  __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"halloooo\");\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/Roy/Desktop/projects/discorderly/Server/pages/Login.tsx"],"names":["React","useState","authenticate","LoginPage","username","password","submitted","loading","error","login","setlogin","handleChange","e","target","name","value","handleSubmit","preventDefault","then","data","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,YAAT,QAA6B,mCAA7B;;AAEA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,GAAM;AAAA,kBACXF,QAAQ,CAAC;AAAIG,IAAAA,QAAQ,EAAE,EAAd;AACKC,IAAAA,QAAQ,EAAE,EADf;AAEKC,IAAAA,SAAS,EAAE,KAFhB;AAGKC,IAAAA,OAAO,EAAE,KAHd;AAIKC,IAAAA,KAAK,EAAE;AAJZ,GAAD,CADG;AAAA,MAC9BC,KAD8B;AAAA,MACvBC,QADuB;;AASrC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA;;AAAA,oBACAA,CAAC,CAACC,MADF;AAAA,QAChBC,IADgB,aAChBA,IADgB;AAAA,QACVC,KADU,aACVA,KADU;AAExBL,IAAAA,QAAQ,mBAAKD,KAAL,wDAAaK,IAAb,EAAoBC,KAApB,mCAA2B,OAA3B,EAAoC,EAApC,oBAAR;AACH,GAHD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAP,IAAAA,QAAQ,mBAAKD,KAAL;AAAYH,MAAAA,SAAS,EAAE;AAAvB,OAAR;AAFwB,QAGhBF,QAHgB,GAGOK,KAHP,CAGhBL,QAHgB;AAAA,QAGNC,QAHM,GAGOI,KAHP,CAGNJ,QAHM,EAIxB;;AACA,QAAI,EAAED,QAAQ,IAAIC,QAAd,CAAJ,EAA6B;AACzB;AACH;;AACDK,IAAAA,QAAQ,mBAAKD,KAAL;AAAYF,MAAAA,OAAO,EAAE;AAArB,OAAR;AACAL,IAAAA,YAAY,CAACE,QAAD,EAAWC,QAAX,CAAZ,CACCa,IADD,CACM,UAAAC,IAAI,EAAI;AAACA,MAAAA,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAR;AAA0B,KADzC;AAEH,GAXD;;AAaI;;AACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,CA9BD;;AAgCA,eAAehB,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { NextPage } from 'next'\r\nimport { authenticate } from '../../Frontend/src/Services/Users';\r\n\r\nconst LoginPage: NextPage<Props> = () => {\r\n    const [login, setlogin] = useState({   username: '',\r\n                                            password: '',\r\n                                            submitted: false,\r\n                                            loading: false,\r\n                                            error: ''\r\n                                        }); \r\n       \r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setlogin({...login, [name]: value, \"error\": \"\" });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setlogin({...login, submitted: true });\r\n        const { username, password } = login;\r\n        // stop here if form is invalid\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        setlogin({...login, loading: true });\r\n        authenticate(username, password)\r\n        .then(data => {data && console.log(data)})\r\n    }\r\n\r\n        return\r\n             <h1>halloooo</h1>\r\n            \r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}