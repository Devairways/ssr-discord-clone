{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nexport var authenticate = function authenticate(username, password) {\n  var data = fetch(\"http://localhost:3000/login\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      name: username,\n      password: password\n    })\n  }).then(function (response) {\n    if (response.status == 200) return response;\n  })[\"catch\"](function (err) {\n    return \"something went wrong error: \".concat(err);\n  });\n  return data;\n};\nexport var registerUser = function registerUser(username, password, email) {\n  var data;\n  return _regeneratorRuntime.async(function registerUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          data = fetch(\"http://localhost:3000/register\", {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: _JSON$stringify({\n              username: username,\n              password: password,\n              email: email\n            })\n          }).then(function _callee(res) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", res.json());\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          })[\"catch\"](function (err) {\n            return \"something went wrong error: \".concat(err);\n          });\n          return _context2.abrupt(\"return\", data);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Roy/Desktop/projects/discorderly/Server/pages/Services/Users.tsx"],"names":["authenticate","username","password","data","fetch","method","headers","body","name","then","response","status","err","registerUser","email","res","json"],"mappings":";;AAGA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACnD,MAAMC,IAAI,GAAGC,KAAK,CAAC,6BAAD,EAA+B;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAEzCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFgC;AAMzCC,IAAAA,IAAI,EAAE,gBAAe;AACvBC,MAAAA,IAAI,EAAEP,QADiB;AAEvBC,MAAAA,QAAQ,EAAEA;AAFa,KAAf;AANmC,GAA/B,CAAL,CAWVO,IAXU,CAWL,UAAAC,QAAQ,EAAI;AACjB,QAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EACC,OAAOD,QAAP;AACE,GAdO,WAeJ,UAAAE,GAAG,EAAI;AAAC,iDAAsCA,GAAtC;AAA4C,GAfhD,CAAb;AAgBC,SAAOT,IAAP;AACA,CAlBK;AAqBP,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAAOZ,QAAP,EAAiBC,QAAjB,EAA2BY,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBX,UAAAA,IADoB,GACbC,KAAK,CAAC,gCAAD,EAAkC;AAClDC,YAAAA,MAAM,EAAE,MAD0C;AAE7CC,YAAAA,OAAO,EAAE;AACJ,wBAAU,kBADN;AAEJ,8BAAgB;AAFZ,aAFoC;AAM7CC,YAAAA,IAAI,EAAE,gBAAe;AACvBN,cAAAA,QAAQ,EAARA,QADuB;AAEvBC,cAAAA,QAAQ,EAARA,QAFuB;AAGvBY,cAAAA,KAAK,EAALA;AAHuB,aAAf;AANuC,WAAlC,CAAL,CAYXL,IAZW,CAYN,iBAAMM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAsBA,GAAG,CAACC,IAAJ,EAAtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZM,WAaL,UAAAJ,GAAG,EAAI;AAAC,yDAAsCA,GAAtC;AAA4C,WAb/C,CADa;AAAA,4CAenBT,IAfmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import React from 'react';\n\n\nexport const authenticate = (username, password) => {\n\tconst data = fetch(\"http://localhost:3000/login\",{\n\t\t\tmethod: 'POST',\n\t        headers: {\n\t            'Accept': 'application/json',\n\t            'Content-Type': 'application/json'\n\t        },\n\t        body: JSON.stringify({\n\t\t\t    name: username,\n\t\t\t    password: password\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.status == 200)\n\t\t\t\t\treturn response\n\t\t    })\n\t\t\t.catch(err => {return `something went wrong error: ${err}`});\n\t\treturn data;\n\t}\n\n\nexport const registerUser = async (username, password, email) => {\n \tconst data = fetch(\"http://localhost:3000/register\",{\n\t \t\tmethod: 'POST',\n\t        headers: {\n\t             'Accept': 'application/json',\n\t             'Content-Type': 'application/json'\n\t                   },\n\t        body: JSON.stringify({\n\t\t\t    username,\n\t\t\t    password,\n\t\t\t    email\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(async res => { return res.json()})\n\t\t\t.catch(err => {return `something went wrong error: ${err}`});\n\t\treturn data;\n\t}"]},"metadata":{},"sourceType":"module"}